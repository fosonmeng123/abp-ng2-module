{"version":3,"file":"abpHttpInterceptor.js","sourceRoot":"","sources":["../../src/abpHttpInterceptor.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC;AAC/C,OAAO,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAC3D,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AAErD,OAAO,EAAoE,YAAY,EAAqB,WAAW,EAAE,MAAM,sBAAsB,CAAC;AAEtJ,iBAAiB;AACjB,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,YAAY,CAAC;AAuC9C;IAEI,8BACY,eAA+B,EAC/B,WAAuB;QADvB,oBAAe,GAAf,eAAe,CAAgB;QAC/B,gBAAW,GAAX,WAAW,CAAY;QAInC,iBAAY,GAAe;YACvB,OAAO,EAAE,wBAAwB;YACjC,OAAO,EAAE,wCAAwC;SACpD,CAAC;QAEF,oBAAe,GAAe;YAC1B,OAAO,EAAE,4BAA4B;YACrC,OAAO,EAAE,2EAA2E;SACvF,CAAC;QAEF,oBAAe,GAAe;YAC1B,OAAO,EAAE,yBAAyB;YAClC,OAAO,EAAE,gDAAgD;SAC5D,CAAC;QAEF,oBAAe,GAAe;YAC1B,OAAO,EAAE,qBAAqB;YAC9B,OAAO,EAAE,0DAA0D;SACtE,CAAC;IApBF,CAAC;IAsBD,uCAAQ,GAAR,UAAS,KAAiB;QACtB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,wCAAS,GAAT,UAAU,KAAiB;QACvB,IAAI,KAAK,CAAC,OAAO,EAAE;YACf,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SAChG;aAAM;YACH,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACjF;IACL,CAAC;IAED,8CAAe,GAAf,UAAgB,SAAiB;QAC7B,IAAI,CAAC,SAAS,EAAE;YACZ,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;SACvB;aAAM;YACH,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC;SAC7B;IACL,CAAC;IAED,wDAAyB,GAAzB,UAA0B,cAAmB,EAAE,SAAkB;QAAjE,iBAUC;QATG,IAAM,IAAI,GAAG,IAAI,CAAC;QAElB,IAAI,cAAc,EAAE;YAChB,cAAc,CAAC,IAAI,CAAC;gBAChB,KAAI,CAAC,eAAe,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,eAAe,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC;SAC1C;IACL,CAAC;IAED,wDAAyB,GAAzB,UAA0B,QAA2B;QACjD,IAAM,IAAI,GAAG,IAAI,CAAC;QAElB,QAAQ,QAAQ,CAAC,MAAM,EAAE;YACrB,KAAK,GAAG;gBACJ,IAAI,CAAC,yBAAyB,CAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EACpC,GAAG,CACN,CAAC;gBACF,MAAM;YACV,KAAK,GAAG;gBACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACrC,MAAM;YACV,KAAK,GAAG;gBACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACrC,MAAM;YACV;gBACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAClC,MAAM;SACb;IACL,CAAC;IAED,gDAAiB,GAAjB,UAAkB,QAA2B,EAAE,YAA2B;QACtE,IAAI,WAA8B,CAAC;QAEnC,IAAI,YAAY,CAAC,OAAO,EAAE;YAEtB,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC;gBACzB,IAAI,EAAE,YAAY,CAAC,MAAM;aAC5B,CAAC,CAAC;YAEH,IAAI,YAAY,CAAC,SAAS,EAAE;gBACxB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBAAA,CAAC;aACjD;SACJ;aAAM;YAEH,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC;gBACzB,IAAI,EAAE,YAAY,CAAC,MAAM;aAC5B,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;gBACrB,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;aAC1C;YAED,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAEnC,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBACzB,IAAI,CAAC,yBAAyB,CAAC,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC;aAChE;SACJ;QAED,OAAO,WAAW,CAAC;IACvB,CAAC;IAED,uDAAwB,GAAxB,UAAyB,QAA2B;QAChD,IAAG,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YAC/B,OAAO,IAAI,CAAC;SACf;QAED,IAAI,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACvD,IAAI,CAAC,WAAW,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;YACnD,OAAO,IAAI,CAAC;SACf;QAED,IAAI,WAAW,CAAC,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC,EAAE;YAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,wCAAwC,GAAG,WAAW,CAAC,CAAC;YAC9E,OAAO,IAAI,CAAC;SACf;QAED,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YACpB,OAAO,IAAI,CAAC;SACf;QAED,OAAO,WAA4B,CAAC;IACxC,CAAC;IAED,6CAAc,GAAd,UAAe,QAA2B;QACtC,IAAI,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,YAAY,IAAI,IAAI,EAAE;YACtB,OAAO,QAAQ,CAAC;SACnB;QAED,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;IAC1D,CAAC;IAED,yCAAU,GAAV,UAAW,IAAS;QAChB,OAAO,IAAI,UAAU,CAAS,UAAC,QAAa;YACxC,IAAI,CAAC,IAAI,EAAE;gBACP,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAClB,QAAQ,CAAC,QAAQ,EAAE,CAAC;aACvB;iBAAM;gBACH,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC9B,MAAM,CAAC,MAAM,GAAG;oBACZ,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC3B,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACxB,CAAC,CAAA;gBACD,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aAC3B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAlKQ,oBAAoB;QADhC,UAAU,EAAE;yCAIoB,cAAc;YAClB,UAAU;OAJ1B,oBAAoB,CAmKhC;IAAD,2BAAC;CAAA,AAnKD,IAmKC;SAnKY,oBAAoB;AAsKjC;IAOI,4BAAY,aAAmC;QAJvC,kBAAa,GAAiB,IAAI,YAAY,EAAE,CAAC;QACjD,kBAAa,GAAiB,IAAI,YAAY,EAAE,CAAC;QACjD,gBAAW,GAAe,IAAI,UAAU,EAAE,CAAC;QAG/C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IAEH,sCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAaC;QAXC,IAAI,mBAAmB,GAAG,IAAI,OAAO,EAAkB,CAAC;QACxD,IAAI,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;QAE5D,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;aACvB,SAAS,CAAC,UAAC,KAAqB;YAC7B,KAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,mBAAmB,CAAE,CAAC;QAC5D,CAAC,EAAE,UAAC,KAAU;YACV,OAAO,KAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,mBAAmB,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;QAEP,OAAO,mBAAmB,CAAC;IAC7B,CAAC;IAES,oDAAuB,GAAjC,UAAkC,OAAyB;QACrD,IAAI,eAAe,GAAG,IAAI,WAAW,EAAE,CAAC;QACxC,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAC,UAAU,CAAC;aACrB,GAAG,CAAC,eAAe,EAAC,UAAU,CAAC;aAC/B,GAAG,CAAC,SAAS,EAAE,+BAA+B,CAAC,CAAC;QAErF,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC;QAChE,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC;QAChE,eAAe,GAAG,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,CAAC;QACnE,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC;QAChE,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;QAE1D,OAAO,OAAO,CAAC,KAAK,CAAC;YACjB,OAAO,EAAE,eAAe;SAC3B,CAAC,CAAC;IACP,CAAC;IAES,oDAAuB,GAAjC,UAAkC,OAAmB;QACjD,IAAI,OAAO,EAAE;YACT,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;SAC/D;QAED,OAAO,OAAO,CAAC;IACnB,CAAC;IAES,uDAA0B,GAApC,UAAqC,OAAmB;QACpD,IAAI,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,8BAA8B,CAAC,CAAC;QACxF,IAAI,eAAe,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,EAAE;YACnE,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,eAAe,CAAC,CAAC;SACjE;QAED,OAAO,OAAO,CAAC;IACnB,CAAC;IAES,oDAAuB,GAAjC,UAAkC,OAAmB;QACjD,IAAI,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,8BAA8B,CAAC,CAAC;QACxF,IAAI,eAAe,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE;YAC/D,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;SAC7D;QAED,OAAO,OAAO,CAAC;IACnB,CAAC;IAES,8CAAiB,GAA3B,UAA4B,OAAmB;QAC3C,IAAI,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAC5E,IAAI,mBAAmB,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;YAChE,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,mBAAmB,CAAC,CAAC;SAC9D;QAED,OAAO,OAAO,CAAC;IACnB,CAAC;IAES,oDAAuB,GAAjC,UAAkC,OAAmB;QACjD,IAAI,oBAAoB,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAAA,CAAC,CAAC,IAAI,CAAC;QAC3E,IAAI,CAAC,oBAAoB,EAAE;YACvB,oBAAoB,GAAG,EAAE,CAAC;SAC7B;QAED,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,UAAC,IAAY,IAAK,OAAA,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAA5B,CAA4B,CAAC,EAAE;YACxF,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;YAC1C,IAAI,OAAO,IAAI,KAAK,EAAE;gBAClB,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,KAAK,CAAC,CAAC;aAC7D;SACJ;QAED,OAAO,OAAO,CAAC;IACnB,CAAC;IAES,kDAAqB,GAA/B,UAAgC,KAAqB,EAAE,mBAA4C;QAC/F,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,KAAK,YAAY,YAAY,EAAE;YAC/B,IAAI,KAAK,CAAC,IAAI,YAAY,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAC;gBAClG,IAAI,cAAc,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;gBAEnC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAA,IAAI;oBACpD,IAAM,YAAY,GAAG,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAE3D,IAAI,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC;wBACjE,IAAI,EAAE,YAAY;qBACrB,CAAC,CAAC,CAAC;oBAEJ,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;wBAC5C,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAE,EAAC,IAAI,EAAG,kBAAkB,EAAC,CAAC;qBACvF,CAAC,CAAC,CAAC;oBAEJ,mBAAmB,CAAC,QAAQ,EAAE,CAAC;gBACnC,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;aAClC;SACJ;aAAM;YACH,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnC;IACL,CAAC;IAES,gDAAmB,GAA7B,UAA8B,KAAU,EAAE,mBAA4C;QAAtF,iBAgCC;QA/BG,IAAI,eAAe,GAAG,IAAI,OAAO,EAAO,CAAC;QAEzC,IAAG,CAAC,CAAC,KAAK,CAAC,KAAK,YAAY,IAAI,CAAC,EAAC;YAC9B,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;YAC/B,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACjB;QAED,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAA,IAAI;YACrD,IAAM,SAAS,GAAG,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxE,IAAM,aAAa,GAAG,IAAI,YAAY,CAAC;gBACnC,OAAO,EAAE,KAAK,CAAC,OAAO;gBACtB,MAAM,EAAE,KAAK,CAAC,MAAM;gBACpB,IAAI,EAAE,SAAS;aAClB,CAAC,CAAC;YAEH,IAAI,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC;YAE9E,IAAI,YAAY,IAAI,IAAI,EAAE;gBACtB,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;aACrE;iBAAM;gBACH,KAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,aAAa,CAAC,CAAC;aAC/D;YAED,eAAe,CAAC,QAAQ,EAAE,CAAC;YAE3B,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,OAAO,eAAe,CAAC;IAC3B,CAAC;IAEO,uCAAU,GAAlB,UAAsB,KAAU,EAAE,SAA+B;QAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;gBACrB,OAAO,IAAI,CAAC;aACf;SACJ;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IArKQ,kBAAkB;QAD9B,UAAU,EAAE;yCAQkB,oBAAoB;OAPtC,kBAAkB,CAsK9B;IAAD,yBAAC;CAAA,AAtKD,IAsKC;SAtKY,kBAAkB","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, of } from 'rxjs';\r\nimport { MessageService } from './message/message.service';\r\nimport { LogService } from './log/log.service';\r\nimport { TokenService } from './auth/token.service';\r\nimport { UtilsService } from './utils/utils.service';\r\n\r\nimport { HttpClient, HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\n\r\n// ie9 Blob shims\r\nimport { Blob, FileReader } from './ie9-blob';\r\n\r\nexport interface IValidationErrorInfo {\r\n\r\n    message: string;\r\n\r\n    members: string[];\r\n\r\n}\r\n\r\nexport interface IErrorInfo {\r\n\r\n    code: number;\r\n\r\n    message: string;\r\n\r\n    details: string;\r\n\r\n    validationErrors: IValidationErrorInfo[];\r\n\r\n}\r\n\r\nexport interface IAjaxResponse {\r\n\r\n    success: boolean;\r\n\r\n    result?: any;\r\n\r\n    targetUrl?: string;\r\n\r\n    error?: IErrorInfo;\r\n\r\n    unAuthorizedRequest: boolean;\r\n\r\n    __abp: boolean;\r\n\r\n}\r\n\r\n@Injectable()\r\nexport class AbpHttpConfiguration {\r\n\r\n    constructor(\r\n        private _messageService: MessageService,\r\n        private _logService: LogService) {\r\n\r\n    }\r\n\r\n    defaultError = <IErrorInfo>{\r\n        message: 'An error has occurred!',\r\n        details: 'Error details were not sent by server.'\r\n    };\r\n\r\n    defaultError401 = <IErrorInfo>{\r\n        message: 'You are not authenticated!',\r\n        details: 'You should be authenticated (sign in) in order to perform this operation.'\r\n    };\r\n\r\n    defaultError403 = <IErrorInfo>{\r\n        message: 'You are not authorized!',\r\n        details: 'You are not allowed to perform this operation.'\r\n    };\r\n\r\n    defaultError404 = <IErrorInfo>{\r\n        message: 'Resource not found!',\r\n        details: 'The resource requested could not be found on the server.'\r\n    };\r\n\r\n    logError(error: IErrorInfo): void {\r\n        this._logService.error(error);\r\n    }\r\n\r\n    showError(error: IErrorInfo): any {\r\n        if (error.details) {\r\n            return this._messageService.error(error.details, error.message || this.defaultError.message);\r\n        } else {\r\n            return this._messageService.error(error.message || this.defaultError.message);\r\n        }\r\n    }\r\n\r\n    handleTargetUrl(targetUrl: string): void {\r\n        if (!targetUrl) {\r\n            location.href = '/';\r\n        } else {\r\n            location.href = targetUrl;\r\n        }\r\n    }\r\n\r\n    handleUnAuthorizedRequest(messagePromise: any, targetUrl?: string) {\r\n        const self = this;\r\n\r\n        if (messagePromise) {\r\n            messagePromise.done(() => {\r\n                this.handleTargetUrl(targetUrl || '/');\r\n            });\r\n        } else {\r\n            self.handleTargetUrl(targetUrl || '/');\r\n        }\r\n    }\r\n\r\n    handleNonAbpErrorResponse(response: HttpResponse<any>) {\r\n        const self = this;\r\n\r\n        switch (response.status) {\r\n            case 401:\r\n                self.handleUnAuthorizedRequest(\r\n                    self.showError(self.defaultError401),\r\n                    '/'\r\n                );\r\n                break;\r\n            case 403:\r\n                self.showError(self.defaultError403);\r\n                break;\r\n            case 404:\r\n                self.showError(self.defaultError404);\r\n                break;\r\n            default:\r\n                self.showError(self.defaultError);\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleAbpResponse(response: HttpResponse<any>, ajaxResponse: IAjaxResponse): HttpResponse<any> {\r\n        var newResponse: HttpResponse<any>;\r\n        \r\n        if (ajaxResponse.success) {\r\n            \r\n            newResponse = response.clone({\r\n                body: ajaxResponse.result\r\n            });\r\n\r\n            if (ajaxResponse.targetUrl) {\r\n                this.handleTargetUrl(ajaxResponse.targetUrl);;\r\n            }\r\n        } else {\r\n\r\n            newResponse = response.clone({\r\n                body: ajaxResponse.result\r\n            });\r\n\r\n            if (!ajaxResponse.error) {\r\n                ajaxResponse.error = this.defaultError;\r\n            }\r\n\r\n            this.logError(ajaxResponse.error);\r\n            this.showError(ajaxResponse.error);\r\n\r\n            if (response.status === 401) {\r\n                this.handleUnAuthorizedRequest(null, ajaxResponse.targetUrl);\r\n            }\r\n        }\r\n\r\n        return newResponse;\r\n    }\r\n\r\n    getAbpAjaxResponseOrNull(response: HttpResponse<any>): IAjaxResponse | null {\r\n        if(!response || !response.headers) {\r\n            return null;\r\n        }\r\n\r\n        var contentType = response.headers.get('Content-Type');\r\n        if (!contentType) {\r\n            this._logService.warn('Content-Type is not sent!');\r\n            return null;\r\n        }\r\n\r\n        if (contentType.indexOf(\"application/json\") < 0) {\r\n            this._logService.warn('Content-Type is not application/json: ' + contentType);\r\n            return null;\r\n        }\r\n        \r\n        var responseObj = JSON.parse(JSON.stringify(response.body));\r\n        if (!responseObj.__abp) {\r\n            return null;\r\n        }\r\n\r\n        return responseObj as IAjaxResponse;\r\n    }\r\n\r\n    handleResponse(response: HttpResponse<any>): HttpResponse<any> {\r\n        var ajaxResponse = this.getAbpAjaxResponseOrNull(response);\r\n        if (ajaxResponse == null) {\r\n            return response;\r\n        }\r\n\r\n        return this.handleAbpResponse(response, ajaxResponse);\r\n    }\r\n\r\n    blobToText(blob: any): Observable<string> {\r\n        return new Observable<string>((observer: any) => {\r\n            if (!blob) {\r\n                observer.next(\"\");\r\n                observer.complete();\r\n            } else {\r\n                let reader = new FileReader(); \r\n                reader.onload = function() { \r\n                    observer.next(this.result);\r\n                    observer.complete();\r\n                }\r\n                reader.readAsText(blob); \r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class AbpHttpInterceptor implements HttpInterceptor {\r\n  \r\n    protected configuration: AbpHttpConfiguration;\r\n    private _tokenService: TokenService = new TokenService();\r\n    private _utilsService: UtilsService = new UtilsService();\r\n    private _logService: LogService = new LogService();\r\n\r\n    constructor(configuration: AbpHttpConfiguration) {\r\n        this.configuration = configuration;\r\n    }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    \r\n    var interceptObservable = new Subject<HttpEvent<any>>();\r\n    var modifiedRequest = this.normalizeRequestHeaders(request);\r\n    \r\n    next.handle(modifiedRequest)\r\n        .subscribe((event: HttpEvent<any>) => {\r\n            this.handleSuccessResponse(event, interceptObservable );\r\n        }, (error: any) => {\r\n            return this.handleErrorResponse(error, interceptObservable);\r\n        });\r\n\r\n    return interceptObservable;\r\n  }\r\n\r\n  protected normalizeRequestHeaders(request: HttpRequest<any>):HttpRequest<any> {\r\n        var modifiedHeaders = new HttpHeaders();\r\n        modifiedHeaders = request.headers.set(\"Pragma\",\"no-cache\")\r\n                                            .set(\"Cache-Control\",\"no-cache\")\r\n                                            .set(\"Expires\", \"Sat, 01 Jan 2000 00:00:00 GMT\");\r\n        \r\n        modifiedHeaders = this.addXRequestedWithHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addAuthorizationHeaders(modifiedHeaders);\r\n        modifiedHeaders = this.addAspNetCoreCultureHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addAcceptLanguageHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addTenantIdHeader(modifiedHeaders);\r\n\r\n        return request.clone({\r\n            headers: modifiedHeaders\r\n        });\r\n    }\r\n\r\n    protected addXRequestedWithHeader(headers:HttpHeaders):HttpHeaders {\r\n        if (headers) {\r\n            headers = headers.set('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAspNetCoreCultureHeader(headers:HttpHeaders):HttpHeaders {\r\n        let cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\r\n        if (cookieLangValue && headers && !headers.has('.AspNetCore.Culture')) {\r\n            headers = headers.set('.AspNetCore.Culture', cookieLangValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAcceptLanguageHeader(headers:HttpHeaders):HttpHeaders {\r\n        let cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\r\n        if (cookieLangValue && headers && !headers.has('Accept-Language')) {\r\n            headers = headers.set('Accept-Language', cookieLangValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addTenantIdHeader(headers:HttpHeaders):HttpHeaders {\r\n        let cookieTenantIdValue = this._utilsService.getCookieValue('Abp.TenantId');\r\n        if (cookieTenantIdValue && headers && !headers.has('Abp.TenantId')) {\r\n            headers = headers.set('Abp.TenantId', cookieTenantIdValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAuthorizationHeaders(headers:HttpHeaders): HttpHeaders {\r\n        let authorizationHeaders = headers ? headers.getAll('Authorization'): null;\r\n        if (!authorizationHeaders) {\r\n            authorizationHeaders = [];\r\n        }\r\n\r\n        if (!this.itemExists(authorizationHeaders, (item: string) => item.indexOf('Bearer ') == 0)) {\r\n            let token = this._tokenService.getToken();\r\n            if (headers && token) {\r\n                headers = headers.set('Authorization', 'Bearer ' + token);\r\n            }\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected handleSuccessResponse(event: HttpEvent<any>, interceptObservable: Subject<HttpEvent<any>>): void{\r\n        var self = this;\r\n\r\n        if (event instanceof HttpResponse) {\r\n            if (event.body instanceof Blob && event.body.type && event.body.type.indexOf(\"application/json\") >= 0){\r\n                var clonedResponse = event.clone();\r\n                \r\n                self.configuration.blobToText(event.body).subscribe(json => {\r\n                    const responseBody = json == \"null\" ? {}: JSON.parse(json);\r\n                    \r\n                    var modifiedResponse = self.configuration.handleResponse(event.clone({\r\n                        body: responseBody\r\n                    }));\r\n                    \r\n                    interceptObservable.next(modifiedResponse.clone({\r\n                        body: new Blob([JSON.stringify(modifiedResponse.body)], {type : 'application/json'})\r\n                    }));\r\n\r\n                    interceptObservable.complete();\r\n                });\r\n            } else {\r\n                interceptObservable.next(event);\r\n                interceptObservable.complete();\r\n            }\r\n        } else {\r\n            interceptObservable.next(event);\r\n        }\r\n    }\r\n\r\n    protected handleErrorResponse(error: any, interceptObservable: Subject<HttpEvent<any>>): Observable<any> {\r\n        var errorObservable = new Subject<any>();\r\n\r\n        if(!(error.error instanceof Blob)){\r\n            interceptObservable.error(error);\r\n            interceptObservable.complete();\r\n            return of({});\r\n        }\r\n\r\n        this.configuration.blobToText(error.error).subscribe(json => {\r\n            const errorBody = (json == \"\" || json == \"null\") ? {}: JSON.parse(json);\r\n            const errorResponse = new HttpResponse({\r\n                headers: error.headers,\r\n                status: error.status,\r\n                body: errorBody\r\n            });\r\n\r\n            var ajaxResponse = this.configuration.getAbpAjaxResponseOrNull(errorResponse);\r\n            \r\n            if (ajaxResponse != null) {\r\n                this.configuration.handleAbpResponse(errorResponse, ajaxResponse);\r\n            } else {\r\n                this.configuration.handleNonAbpErrorResponse(errorResponse);\r\n            }\r\n\r\n            errorObservable.complete();\r\n            \r\n            interceptObservable.error(error);\r\n            interceptObservable.complete();\r\n        });\r\n        \r\n        return errorObservable;\r\n    }\r\n\r\n    private itemExists<T>(items: T[], predicate: (item: T) => boolean): boolean {\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (predicate(items[i])) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n"]}